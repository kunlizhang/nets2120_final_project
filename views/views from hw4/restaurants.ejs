<!DOCTYPE html>
<html>
<head>
	<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js'></script>
	<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css'></link>
	<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap-theme.min.css'></link>
	<script src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js'></script>
	<script>
    // Global variables
	var map;
	var restaurantsJSON;
	var restaurants = {};
	var username;
	var markers = {};
	
	// Called when map is first made
	function initMap() {
	  username = "<%= username %>";
	  restaurantsJSON = <%-JSON.stringify(restaurants) %>;
	  
	  for (var rest of restaurantsJSON) {
	    restaurants[rest.name.S] = {
	      name: rest.name.S,
	      latitude: rest.latitude.N,
	      longitude: rest.longitude.N,
	      description: rest.description.S,
	      creator: rest.creator.S
	    };
	  }
	  
	  var options = {
	    center: { lat: 39.952583, lng: -75.165222},
        zoom: 12
      };
	  
	  map = new google.maps.Map(document.getElementById('map'), options);
	  
	  for (var restName in restaurants) {
	    addMarker(restName);
	  }
	  
	  // Setup event handlers for clicking
	  map.addListener("click", (mapsMouseEvent) => {
	    document.getElementById('lat-field').value = mapsMouseEvent.latLng.lat();
	    document.getElementById('lng-field').value = mapsMouseEvent.latLng.lng();
	  });
    }
    
    // Add a marker given the restaurant name
    function addMarker(restName) {
      var marker;
      var infowindow = new google.maps.InfoWindow();
      
      marker = new google.maps.Marker({
		  position: {lat: parseFloat(restaurants[restName].latitude), lng: parseFloat(restaurants[restName].longitude)},
		  map,
		  title: restaurants[restName].name
	    });
	    
	    if (restaurants[restName].creator === username) {
	      marker.setIcon("https://maps.google.com/mapfiles/kml/paddle/ylw-circle.png");
	      google.maps.event.addListener(marker, "rightclick", (function(marker, resName) {
	        return function () {
	          deleteRestaurant(resName);
	        }
	      })(marker, restName));
	    } else {
	      google.maps.event.addListener(marker, "rightclick", () => alert("You cannot delete other user's restaurants."));
	    }
	  
	    google.maps.event.addListener(marker, "click", (function (marker, restName) {
	      return function () {
	        infowindow.setContent(
	          `<div id="marker-content">
	            <b> ${restaurants[restName].name} </b>
	            <div>
	            ${restaurants[restName].description}
	            </div>
	            <i>
	            Added by ${restaurants[restName].creator}
	            </i>
	          </div>
	          `);
	        infowindow.open({
	          anchor: marker,
	          map,
	        });
	      }
	    })(marker, restName)); 
	    
	    markers[restName] = marker;
    }
    
    // Handler for clicking the "Add Restaurant" button
    function addRestaurant() {
      if (
        !document.getElementById("name-field").value || 
        !document.getElementById("lat-field").value ||
        !document.getElementById("lng-field").value || 
        !document.getElementById("desc-field").value
      ) {
        alert("Form must not have empty fields.");
        return;
      }
      
      $.ajax({
        url: 'addrestaurant',
        type: 'post',
        data: $('form').serialize(),
        success: function(data) {
          console.log("Added new restaurant to database.");
          var restName = document.getElementById("name-field").value;
          restaurants[restName] = {
            name: restName,
            latitude: document.getElementById("lat-field").value,
            longitude: document.getElementById("lng-field").value,
            description: document.getElementById("desc-field").value,
            creator: username
          };
          
          addMarker(restName);
	       
	      document.getElementById("addForm").reset();
        },
        failure: function(err) {
          alert("Failed to add restaurant to database.");
        }
      });
    }
    
    // Handler for right click deleting a restaurant
    function deleteRestaurant(resName) {
      $.ajax({
        url: 'deleterestaurant',
        type: 'post',
        data: {name: resName},
        success: function(data) {
          console.log("Deleted restaurant " + resName + ".");
          markers[resName].setMap(null);
          delete restaurants[resName];
        },
        failure: function(err) {
          alert("Failed to delete restaurant from database.");
        }
      })
    }
    
    // AJAX background refresh of the map every 10 seconds.
    refresh();
    setInterval(function() {refresh()}, 10000);
    
    function refresh() {
      $.ajax({
        url: 'restaurantsJSON',
        type: 'get',
        dataType: 'json',
        success: function(data) {
          // Handle new items
          for (var restName in data) {
            if (!restaurants.hasOwnProperty(restName)) {
              restaurants[restName] = data[restName];
              addMarker(restName);
            }
          }
          
          // Handle deletions
          for (var restName in restaurants) {
            if (!data.hasOwnProperty(restName)) {
              markers[restName].setMap(null);
              delete restaurants[restName];
            }
          }
        }
      });
    };
	</script>
</head>
<body>
  <div class="container">
    <h1>Restaurants</h1>
    <div id="map" style="height:400px; width:100%;"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaIb7EhD5uWzvpB-0Av2Ru3Xi7PS_1XmQ&callback=initMap" defer></script>
  </div>
  <div class="container">
    <h3>Add a restaurant</h3>
    <form id="addForm" class="form-horizontal">
      <div class="form-row">
        <div class="form-group">
	      <label for="latitude" class="col-sm-2 control-label">Latitude</label>
	      <div class="col-sm-4">
	        <input type="number" class="form-control" name="latitude" id="lat-field" step="any" placeholder="Latitude" required>
  	      </div>
	      <label for="longitude" class="col-sm-2 control-label">Longitude</label>
	      <div class="col-sm-4">
	        <input type="number" class="form-control" name="longitude" id="lng-field" step="any" placeholder="Longitude" required>
  	      </div>
  	    </div>
  	    <div class="form-group">
	      <label for="name" class="col-sm-2 control-label">Restaurant Name</label>
	      <div class="col-sm-10">
	        <input type="text" class="form-control" name="name" id="name-field" placeholder="Restaurant Name" required>
  	      </div>
  	    </div>
  	    <div class="form-group">
	      <label for="description" class="col-sm-2 control-label">Description</label>
	      <div class="col-sm-10">
	        <input type="text" class="form-control" name="description" id="desc-field" placeholder="Description" required>
  	      </div>
  	    </div>
  	    <div class="form-group">
  	      <div class="col-sm-offset-2 col-sm-10">
            <input class="btn btn-primary" value="Add Restaurant" onclick="addRestaurant()">		
          </div>
  	    </div>
      </div>
    </form>
    <button onclick="location.href = '/logout'" class="btn">Log out</button>
  </div>
  <div class="container" style='margin-top:25px'>
    <button onclick="location.href = '/deleteaccount'" class="btn btn-warning">Permanently delete account and entries</button>
  </div>
</body>
</html>
